{"ast":null,"code":"import _classCallCheck from \"D:\\\\PROGRAMOWANIE\\\\CATKEEPER GIT\\\\Catkeeper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\PROGRAMOWANIE\\\\CATKEEPER GIT\\\\Catkeeper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\PROGRAMOWANIE\\\\CATKEEPER GIT\\\\Catkeeper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\PROGRAMOWANIE\\\\CATKEEPER GIT\\\\Catkeeper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\PROGRAMOWANIE\\\\CATKEEPER GIT\\\\Catkeeper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\PROGRAMOWANIE\\\\CATKEEPER GIT\\\\Catkeeper\\\\src\\\\components\\\\InputPlayerName.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport ButtonSet from \"./ButtonSet\";\nimport { newGame } from \"../actions\";\nimport \"./InputPlayerName.css\";\n\nvar inputPlayerName =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(inputPlayerName, _React$Component);\n\n  function inputPlayerName(props) {\n    var _this;\n\n    _classCallCheck(this, inputPlayerName);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(inputPlayerName).call(this, props));\n\n    _this.onClick = function () {\n      _this.props.newGame({\n        player: [_this.textInput1.current.value, _this.textInput2.current.value],\n        house: _this.props.typedHouse\n      });\n    };\n\n    _this.textInput1 = React.createRef();\n    _this.textInput2 = React.createRef();\n    return _this;\n  }\n\n  _createClass(inputPlayerName, [{\n    key: \"renderInputList\",\n    value: function renderInputList() {\n      var inputs = [this.textInput1, this.textInput2];\n      return inputs.map(function (cur, index) {\n        return React.createElement(\"input\", {\n          ref: cur,\n          className: \"playerName__input\",\n          key: \"input \".concat(index),\n          type: \"text\",\n          maxLength: \"13\",\n          placeholder: \"Keeper \".concat(index + 1, \" name\"),\n          spellCheck: \"false\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"playerName\",\n        onSubmit: function onSubmit(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.renderInputList()), React.createElement(ButtonSet, {\n        btnName: \"Start Game\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return inputPlayerName;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    typedHouse: state.typedHouse,\n    game: state.game\n  };\n};\n\nexport default connect(mapStateToProps, {\n  newGame: newGame\n})(inputPlayerName);","map":{"version":3,"sources":["D:\\PROGRAMOWANIE\\CATKEEPER GIT\\Catkeeper\\src\\components\\InputPlayerName.js"],"names":["React","connect","ButtonSet","newGame","inputPlayerName","props","onClick","player","textInput1","current","value","textInput2","house","typedHouse","createRef","inputs","map","cur","index","e","preventDefault","renderInputList","Component","mapStateToProps","state","game"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,OAAO,uBAAP;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;;AADiB,UAOnBC,OAPmB,GAOT,YAAM;AACd,YAAKD,KAAL,CAAWF,OAAX,CAAmB;AACjBI,QAAAA,MAAM,EAAE,CAAC,MAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,KAAzB,EAAgC,MAAKC,UAAL,CAAgBF,OAAhB,CAAwBC,KAAxD,CADS;AAEjBE,QAAAA,KAAK,EAAE,MAAKP,KAAL,CAAWQ;AAFD,OAAnB;AAID,KAZkB;;AAGjB,UAAKL,UAAL,GAAkBR,KAAK,CAACc,SAAN,EAAlB;AACA,UAAKH,UAAL,GAAkBX,KAAK,CAACc,SAAN,EAAlB;AAJiB;AAKlB;;;;sCAQiB;AAChB,UAAMC,MAAM,GAAG,CAAC,KAAKP,UAAN,EAAkB,KAAKG,UAAvB,CAAf;AACA,aAAOI,MAAM,CAACC,GAAP,CAAW,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAChC,eACE;AACE,UAAA,GAAG,EAAED,GADP;AAEE,UAAA,SAAS,EAAC,mBAFZ;AAGE,UAAA,GAAG,kBAAWC,KAAX,CAHL;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,SAAS,EAAC,IALZ;AAME,UAAA,WAAW,mBAAYA,KAAK,GAAG,CAApB,UANb;AAOE,UAAA,UAAU,EAAC,OAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,OAZM,CAAP;AAaD;;;6BACQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,cAAF,EAAJ;AAAA,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,eAAL,EADH,CADF,EAIE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAC,YAAnB;AAAgC,QAAA,OAAO,EAAE,KAAKf,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EAvC2BN,KAAK,CAACsB,S;;AA0CpC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AAAEX,IAAAA,UAAU,EAAEW,KAAK,CAACX,UAApB;AAAgCY,IAAAA,IAAI,EAAED,KAAK,CAACC;AAA5C,GAAP;AACD,CAFD;;AAIA,eAAexB,OAAO,CACpBsB,eADoB,EAEpB;AAAEpB,EAAAA,OAAO,EAAPA;AAAF,CAFoB,CAAP,CAGbC,eAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ButtonSet from \"./ButtonSet\";\r\nimport { newGame } from \"../actions\";\r\n\r\nimport \"./InputPlayerName.css\";\r\n\r\nclass inputPlayerName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textInput1 = React.createRef();\r\n    this.textInput2 = React.createRef();\r\n  }\r\n\r\n  onClick = () => {\r\n    this.props.newGame({\r\n      player: [this.textInput1.current.value, this.textInput2.current.value],\r\n      house: this.props.typedHouse\r\n    });\r\n  };\r\n  renderInputList() {\r\n    const inputs = [this.textInput1, this.textInput2];\r\n    return inputs.map((cur, index) => {\r\n      return (\r\n        <input\r\n          ref={cur}\r\n          className=\"playerName__input\"\r\n          key={`input ${index}`}\r\n          type=\"text\"\r\n          maxLength=\"13\"\r\n          placeholder={`Keeper ${index + 1} name`}\r\n          spellCheck=\"false\"\r\n        />\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"playerName\" onSubmit={e => e.preventDefault()}>\r\n          {this.renderInputList()}\r\n        </form>\r\n        <ButtonSet btnName=\"Start Game\" onClick={this.onClick} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { typedHouse: state.typedHouse, game: state.game };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { newGame }\r\n)(inputPlayerName);\r\n"]},"metadata":{},"sourceType":"module"}