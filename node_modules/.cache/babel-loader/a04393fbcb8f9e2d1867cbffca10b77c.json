{"ast":null,"code":"import _toConsumableArray from \"D:\\\\PROGRAMOWANIE\\\\CATKEEPER GAME\\\\catkeeper\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from \"redux\";\n\nvar typedHouseReducer = function typedHouseReducer() {\n  var typedHouse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 7;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type !== \"TYPE_OF_HOUSE\") {\n    return typedHouse;\n  }\n\n  switch (action.payload) {\n    case \"small\":\n      return typedHouse = 5;\n\n    case \"middle\":\n      return typedHouse = 7;\n\n    case \"big\":\n      return typedHouse = 9;\n  }\n};\n\nvar newGameReducer = function newGameReducer() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [{\n    score0: 0,\n    circleAmount0: 0,\n    pawAmount0: 0\n  }, {\n    score1: 0,\n    circleAmount1: 0,\n    pawAmount1: 0\n  }];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"NEW_GAME\":\n      return [].concat(_toConsumableArray(initialState), [initialState[0].circleAmount0 = action.payload, initialState[1].circleAmount1 = action.payload]);\n\n    default:\n      return initialSet;\n  }\n};\n\nexport default combineReducers({\n  typedHouse: typedHouseReducer,\n  newGame: newGameReducer\n});","map":{"version":3,"sources":["D:\\PROGRAMOWANIE\\CATKEEPER GAME\\catkeeper\\src\\reducers\\index.js"],"names":["combineReducers","typedHouseReducer","typedHouse","action","type","payload","newGameReducer","initialState","score0","circleAmount0","pawAmount0","score1","circleAmount1","pawAmount1","initialSet","newGame"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAA4B;AAAA,MAA3BC,UAA2B,uEAAd,CAAc;AAAA,MAAXC,MAAW;;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACnC,WAAOF,UAAP;AACD;;AAED,UAAQC,MAAM,CAACE,OAAf;AACE,SAAK,OAAL;AACE,aAAQH,UAAU,GAAG,CAArB;;AACF,SAAK,QAAL;AACE,aAAQA,UAAU,GAAG,CAArB;;AACF,SAAK,KAAL;AACE,aAAQA,UAAU,GAAG,CAArB;AANJ;AAQD,CAbD;;AAeA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAMlB;AAAA,MALHC,YAKG,uEALY,CACb;AAAEC,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,aAAa,EAAE,CAA5B;AAA+BC,IAAAA,UAAU,EAAE;AAA3C,GADa,EAEb;AAAEC,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,aAAa,EAAE,CAA5B;AAA+BC,IAAAA,UAAU,EAAE;AAA3C,GAFa,CAKZ;AAAA,MADHV,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,0CACKG,YADL,IAEGA,YAAY,CAAC,CAAD,CAAZ,CAAgBE,aAAhB,GAAgCN,MAAM,CAACE,OAF1C,EAGGE,YAAY,CAAC,CAAD,CAAZ,CAAgBK,aAAhB,GAAgCT,MAAM,CAACE,OAH1C;;AAKF;AACE,aAAOS,UAAP;AARJ;AAUD,CAjBD;;AAmBA,eAAed,eAAe,CAAC;AAC7BE,EAAAA,UAAU,EAAED,iBADiB;AAE7Bc,EAAAA,OAAO,EAAET;AAFoB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst typedHouseReducer = (typedHouse = 7, action) => {\r\n  if (action.type !== \"TYPE_OF_HOUSE\") {\r\n    return typedHouse;\r\n  }\r\n\r\n  switch (action.payload) {\r\n    case \"small\":\r\n      return (typedHouse = 5);\r\n    case \"middle\":\r\n      return (typedHouse = 7);\r\n    case \"big\":\r\n      return (typedHouse = 9);\r\n  }\r\n};\r\n\r\nconst newGameReducer = (\r\n  initialState = [\r\n    { score0: 0, circleAmount0: 0, pawAmount0: 0 },\r\n    { score1: 0, circleAmount1: 0, pawAmount1: 0 }\r\n  ],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"NEW_GAME\":\r\n      return [\r\n        ...initialState,\r\n        (initialState[0].circleAmount0 = action.payload),\r\n        (initialState[1].circleAmount1 = action.payload)\r\n      ];\r\n    default:\r\n      return initialSet;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  typedHouse: typedHouseReducer,\r\n  newGame: newGameReducer\r\n});\r\n"]},"metadata":{},"sourceType":"module"}