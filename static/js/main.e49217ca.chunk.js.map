{"version":3,"sources":["components/ButtonPlay.js","actions/index.js","components/ButtonPlayList.js","components/CommentArea.js","components/CatPath.js","components/PlayerCard.js","components/PlayerCardList.js","components/ButtonSelect.js","components/ButtonSet.js","components/ButtonSetList.js","components/InputPlayerName.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","player1Status","game","playerStatus","player2Status","btnPlay","playerResults","type","payload","props","react_default","a","createElement","style","visibility","points","active","className","onClick","onClickArg","name","icon","ButtonPlayList","roundScore","winnerScore","this","pathLength","score","paw","Math","floor","resume","_this","btnScore","random","round","map","cur","index","components_ButtonPlay","key","playerScore","btnType","renderList","React","Component","CommentArea","_ref","status","content","commentsBox","bad","concat","medium","good","full","prevStep","nextStep","newGame","winner","looser","CatPath","list","i","pawAmount","push","PlayerCard","classNumber","playerName","player","backgroundColor","src_components_CatPath","src_components_CommentArea","components_ButtonPlayList","playerList","src_components_PlayerCard","mapDispatchToProps","typeOfHouse","value","console","log","typedHouse","defaultValue","onChange","event","target","ButtonSet","btnName","reset","settings","buttonList","action","components_ButtonSet","inputPlayerName","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","textInput1","current","textInput2","house","createRef","ref","maxLength","placeholder","spellCheck","onSubmit","e","preventDefault","renderInputList","values","inactive_game","inactive_context","ButtonSelect","components_InputPlayerName","components_PlayerCardList","components_ButtonSetList","combineReducers","arguments","length","undefined","initialState","el","circleAmount","circle","ReactDOM","render","es","store","createStore","reducers","src_components_App","document","querySelector"],"mappings":"gWAiCeA,qBANS,SAAAC,GACtB,MAAO,CACLC,cAAeD,EAAME,KAAK,GAAGC,aAC7BC,cAAeJ,EAAME,KAAK,GAAGC,eAK/B,CAAEE,QCVmB,SAAAC,GACrB,MAAO,CACLC,KAAM,WACNC,QAASF,KDKEP,CA5BI,SAAAU,GACjB,OACEC,EAAAC,EAAAC,cAAA,UACEC,MAAO,CAAEC,WAAoC,IAAxBL,EAAMM,OAAOC,OAAe,UAAY,UAC7DC,UAAU,eACVC,QAAS,WACP,GAC0B,IAAxBT,EAAMR,eACkB,IAAxBQ,EAAML,eACkB,IAAxBK,EAAMM,OAAOC,OAIb,OAAO,EAFPP,EAAMJ,QAAQI,EAAMU,cAMxBT,EAAAC,EAAAC,cAAA,YAAUQ,KAAMX,EAAMY,WEcbC,sLAhCDC,GACV,IAAMC,EAA6C,EAA/BC,KAAKhB,MAAMM,OAAOW,WAChCC,EAAQF,KAAKhB,MAAMM,OAAOY,MAAQJ,EAElCpB,EAAewB,GAASH,EAAc,SAAW,EAEvD,MAAO,CAAED,aAAYI,QAAOC,IAHhBD,GAAS,EAAIE,KAAKC,MAAMH,EAAQ,GAAK,EAGhBxB,eAAc4B,OADf,WAAjB5B,EAA4B,EAAI,wCAIpC,IAAA6B,EAAAP,KAOX,MAJe,CACb,CAAEJ,KAAM,QAASY,SAHEJ,KAAKC,MAAsB,EAAhBD,KAAKK,UAAgB,GAInD,CAAEb,KAAM,OAAQY,SAHKJ,KAAKM,OAAuB,EAAjBN,KAAKK,SAAgC,EAAhBL,KAAKK,YAK9CE,IAAI,SAACC,EAAKC,GAAN,OAChB5B,EAAAC,EAAAC,cAAC2B,EAAD,CACElB,KAAMgB,EAAIhB,KACVmB,IAAKF,EACLnB,WAAYa,EAAKS,YAAYJ,EAAIJ,UACjClB,OAAQiB,EAAKvB,MAAMM,OACnB2B,QAAQ,+CAMZ,OAAOhC,EAAAC,EAAAC,cAAA,WAAMa,KAAKkB,qBA7BOC,IAAMC,WCgDpBC,SAhDK,SAAAC,GAA4B,IAAzBxB,EAAyBwB,EAAzBxB,WAAYyB,EAAaD,EAAbC,OAC7BC,EAAU,GACRC,EAAc,CAClBC,IAAG,8JAAAC,OAAgK7B,EAAhK,YACH8B,OAAM,uFAAAD,OAAyF7B,EAAzF,+EACN+B,KAAI,qEAAAF,OAAuE7B,EAAvE,YACJgC,KAAI,8HACJC,SACE,uIACFC,SACE,4IACFC,QACE,4EACFC,OACE,4LACFC,OACE,uLAEJ,GAAKZ,EAwBHC,EAAUC,EAAYS,YAvBtB,QAAQ,GACN,KAAKpC,GAAc,EACjB0B,EAAO,GAAAG,OAAMF,EAAYC,IAAlB,KAAAC,OAAyBF,EAAYM,UAC5C,MAEF,KAAKjC,IAAe,GAAKA,EAAa,EACpC0B,EAAUC,EAAYC,IACtB,MAEF,KAAoB,IAAf5B,EACH0B,EAAUC,EAAYK,KACtB,MAEF,KAAKhC,EAAa,GAAKA,EAAa,EAClC0B,EAAUC,EAAYG,OACtB,MAEF,KAAK9B,GAAc,EACjB0B,EAAO,GAAAG,OAAMF,EAAYI,KAAlB,KAAAF,OAA0BF,EAAYO,UAQnD,OAAO/C,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eAAegC,KCZxBY,8LAlBX,IADA,IAAMC,EAAO,GACJC,EAAI,EAAGA,GAAKtC,KAAKhB,MAAMM,OAAOW,WAAYqC,IAC7CA,GAAKtC,KAAKhB,MAAMM,OAAOiD,UACzBF,EAAKG,KAAKvD,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SAASuB,IAAKuB,KAEtCD,EAAKG,KAAKvD,EAAAC,EAAAC,cAAA,MAAI4B,IAAKuB,KAGvB,OAAOD,mCAGP,OACEpD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,gBAAgBQ,KAAKkB,sBA1BrBC,IAAMC,YCsCbqB,EApCI,SAAAnB,GAAmCA,EAAhC3B,KAAgC,IAA1BL,EAA0BgC,EAA1BhC,OAAQoD,EAAkBpB,EAAlBoB,YAC5BC,EACoB,WAAxBrD,EAAOZ,aAA4BY,EAAOZ,aAAeY,EAAOsD,OAClE,OACE3D,EAAAC,EAAAC,cAAA,OACEK,UAAU,cACVJ,MAAO,CACLyD,gBACoB,IAAlBvD,EAAOC,OACH,8BACA,gCAGRN,EAAAC,EAAAC,cAAA,OACEK,UAAS,kDAAAmC,OAAoDe,GAC7DtD,MAAO,CACLC,WAA8B,IAAlBC,EAAOC,OAAe,WAAa,YAGnDN,EAAAC,EAAAC,cAAA,UAAKwD,GACL1D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,sBAAf,gBAAkDF,EAAOY,OACzDjB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iCACbP,EAAAC,EAAAC,cAAC2D,EAAD,CAASxD,OAAQA,IACjBL,EAAAC,EAAAC,cAAC4D,EAAD,CACEjD,WAAYR,EAAOQ,WACnByB,OAAQjC,EAAOZ,gBAInBO,EAAAC,EAAAC,cAAA,OAAKK,UAAU,wBACbP,EAAAC,EAAAC,cAAC6D,EAAD,CAAgB1D,OAAQA,OCdjBhB,cAJS,SAAAC,GACtB,MAAO,CAAEE,KAAMF,EAAME,OAGRH,CAjBQ,SAAAgD,GAAc,IAAX7C,EAAW6C,EAAX7C,KAElBwE,EADa,CAACxE,EAAK,GAAGmE,OAAQnE,EAAK,GAAGmE,QACdjC,IAAI,SAACC,EAAKC,GAAN,OAChC5B,EAAAC,EAAAC,cAAC+D,EAAD,CACEnC,IAAKH,EACLjB,KAAMiB,EACNtB,OAAQb,EAAKoC,GACb6B,YAAa7B,EAAQ,MAGzB,OAAO5B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YAAYyD,KCQ9BE,EAAqB,CACzBC,YNxByB,SAAAC,GACzB,MAAO,CACLvE,KAAM,gBACNC,QAASsE,KMwBE/E,cATS,SAAAC,GAGtB,OAFA+E,QAAQC,IAAIhF,GAEL,CAAEiF,WAAYjF,EAAMiF,aAQ3BL,EAFa7E,CAtBQ,SAAAU,GACrB,OACEC,EAAAC,EAAAC,cAAA,UACEsE,aAAa,SACbjE,UAAU,UACVkE,SAAU,SAAAC,GAAK,OAAI3E,EAAMoE,YAAYO,EAAMC,OAAOP,SAElDpE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,SAAd,eACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,UAAd,gBACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,OAAd,gBCHSQ,EARG,SAAA7E,GAChB,OACEC,EAAAC,EAAAC,cAAA,UAAQK,UAAS,OAAAmC,OAAS3C,EAAMiC,SAAWxB,QAAST,EAAMS,SACvDT,EAAM8E,UCgBExF,cACb,KACA,CAAEyF,MRViB,WACnB,MAAO,CACLjF,KAAM,UQQCkF,SRLa,WACtB,MAAO,CACLlF,KAAM,cQCKR,CAjBO,SAAAU,GACpB,IAIMiF,EAJa,CACjB,CAAEtE,KAAMV,EAAAC,EAAAC,cAAA,YAAUQ,KAAK,YAAcuE,OAAQlF,EAAM+E,OACnD,CAAEpE,KAAMV,EAAAC,EAAAC,cAAA,YAAUQ,KAAK,aAAeuE,OAAQlF,EAAMgF,WAExBrD,IAAI,SAACC,EAAKC,GAAN,OAChC5B,EAAAC,EAAAC,cAACgF,EAAD,CACEL,QAASlD,EAAIjB,KACbsB,QAAQ,aACRF,IAAKF,EACLpB,QAASmB,EAAIsD,WAIjB,OAAOjF,EAAAC,EAAAC,cAAA,WAAM8E,KCZTG,qBACJ,SAAAA,EAAYpF,GAAO,IAAAuB,EAAA,OAAA8D,OAAAC,EAAA,EAAAD,CAAArE,KAAAoE,IACjB7D,EAAA8D,OAAAE,EAAA,EAAAF,CAAArE,KAAAqE,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAzE,KAAMhB,KAMRS,QAAU,WACRc,EAAKvB,MAAMiD,QAAQ,CACjBW,OAAQ,CAACrC,EAAKmE,WAAWC,QAAQtB,MAAO9C,EAAKqE,WAAWD,QAAQtB,OAChEwB,MAAOtE,EAAKvB,MAAMwE,cAPpBjD,EAAKmE,WAAavD,IAAM2D,YACxBvE,EAAKqE,WAAazD,IAAM2D,YAJPvE,iFAejB,MADe,CAACP,KAAK0E,WAAY1E,KAAK4E,YACxBjE,IAAI,SAACC,EAAKC,GACtB,OACE5B,EAAAC,EAAAC,cAAA,SACE4F,IAAKnE,EACLpB,UAAU,oBACVuB,IAAG,SAAAY,OAAWd,GACd/B,KAAK,OACLkG,UAAU,KACVC,YAAW,UAAAtD,OAAYd,EAAQ,EAApB,SACXqE,WAAW,6CAMjB,OACEjG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMK,UAAU,aAAa2F,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBAC3CrF,KAAKsF,mBAERrG,EAAAC,EAAAC,cAACgF,EAAD,CACEL,QAAQ,aACR7C,QAAQ,UACRxB,QAASO,KAAKP,kBAvCM0B,IAAMC,YAkDrB9C,cAJS,SAAAC,GACtB,MAAO,CAAEiF,WAAYjF,EAAMiF,WAAY/E,KAAMF,EAAME,OAKnD,CAAEwD,QTpDmB,SAAAsD,GACrB,MAAO,CACLzG,KAAM,WACNC,QAASwG,KS+CEjH,CAGb8F,GCpBa9F,qBALS,SAAAC,GACtB,MAAO,CACL+B,OAAQ/B,EAAM+B,SAGHhC,CA/BH,SAAAU,GACV,IAAMwG,EAAgBxG,EAAMsB,OAAS,WAAa,GAC5CmF,EAAmBzG,EAAMsB,OAAS,GAAK,WAE7C,OACErB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAS,yBAAAmC,OAA2B8D,IACvCxG,EAAAC,EAAAC,cAAA,MAAIK,UAAU,4BAAd,aACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,yBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mCACbP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,mCAAd,iBACAP,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAACwG,EAAD,SAIN1G,EAAAC,EAAAC,cAAA,OAAKK,UAAS,2BAAAmC,OAA6B6D,IACzCvG,EAAAC,EAAAC,cAACyG,EAAD,OAEF3G,EAAAC,EAAAC,cAAA,OAAKK,UAAS,2BAAAmC,OAA6B6D,IACzCvG,EAAAC,EAAAC,cAAC0G,EAAD,WC+DOC,cAAgB,CAC7BtC,WAlFwB,WAA4B,IAA3BA,EAA2BuC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EAAG7B,EAAW6B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,GAAoB,kBAAhB/B,EAAOpF,KACT,OAAO0E,EAGT,OAAQU,EAAOnF,SACb,IAAK,QACH,OAAqB,EACvB,IAAK,SACH,OAAqB,EACvB,IAAK,MACH,OAAqB,IAwEzBN,KApEkB,WAoBf,IAnBHyH,EAmBGH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAnBY,CACb,CACEnD,OAAQ,WACR1C,MAAO,EACPD,WAAY,EACZsC,UAAW,EACXhD,OAAQ,EACRb,aAAc,GAEhB,CACEkE,OAAQ,WACR1C,MAAO,EACPD,WAAY,EACZsC,UAAW,EACXhD,OAAQ,EACRb,aAAc,IAGlBwF,EACG6B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACH,OAAQ/B,EAAOpF,MACb,IAAK,WACH,OAAOoH,EAAavF,IAAI,SAACwF,EAAItF,GAW3B,OAVAsF,EAAGvD,OACgC,KAAjCsB,EAAOnF,QAAQ6D,OAAO/B,GAAtB,UAAAc,OACcd,EAAQ,GAClBqD,EAAOnF,QAAQ6D,OAAO/B,GAC5BsF,EAAGrG,WAAa,IAChBqG,EAAGjG,MAAQ,EACXiG,EAAGlG,WAAaiE,EAAOnF,QAAQ8F,MAC/BsB,EAAG5D,UAAY,EACf4D,EAAG5G,OAAmB,IAAVsB,EAAc,EAAI,EAC9BsF,EAAGzH,aAAe,EACXyH,IAEX,IAAK,QACH,OAAOD,EAAavF,IAAI,SAACwF,EAAItF,GAM3B,OALAsF,EAAGrG,WAAa,IAChBqG,EAAGjG,MAAQ,EACXiG,EAAG5D,UAAY,EACf4D,EAAG5G,OAAmB,IAAVsB,EAAc,EAAI,EAC9BsF,EAAGzH,aAAe,EACXyH,IAEX,IAAK,WACH,OAAOD,EAAavF,IAAI,SAAAC,GACtB,OAAmB,IAAfA,EAAIrB,QACNqB,EAAId,WAAaoE,EAAOnF,QAAQe,WAChCc,EAAIV,MAAQgE,EAAOnF,QAAQmB,MAC3BU,EAAIwF,aAAelC,EAAOnF,QAAQsH,OAClCzF,EAAI2B,UAAY2B,EAAOnF,QAAQoB,IAC/BS,EAAIrB,OAAS,EACbqB,EAAIlC,aAAewF,EAAOnF,QAAQL,aAC3BkC,IAEPA,EAAIrB,OAAS,EACNqB,KAIb,QACE,OAAOsF,IAOX5F,OA7FqB,WAAwB,IAAvBA,EAAuByF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EAAG7B,EAAW6B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAM7C,MALoB,aAAhB/B,EAAOpF,KACTwB,EAAS,EACgB,aAAhB4D,EAAOpF,OAChBwB,EAAS,GAEJA,KCDTgG,IAASC,OACPtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IAC3B1H,EAAAC,EAAAC,cAACyH,EAAD,OAEFC,SAASC,cAAc","file":"static/js/main.e49217ca.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { btnPlay } from \"../actions\";\r\nimport \"./Buttons.css\";\r\n\r\nconst ButtonPlay = props => {\r\n  return (\r\n    <button\r\n      style={{ visibility: props.points.active === 1 ? \"visible\" : \"hidden\" }}\r\n      className=\"btn btn-play\"\r\n      onClick={() => {\r\n        if (\r\n          props.player1Status === 0 &&\r\n          props.player2Status === 0 &&\r\n          props.points.active === 1\r\n        ) {\r\n          props.btnPlay(props.onClickArg);\r\n        } else {\r\n          return false;\r\n        }\r\n      }}\r\n    >\r\n      <ion-icon name={props.icon} />\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    player1Status: state.game[0].playerStatus,\r\n    player2Status: state.game[1].playerStatus\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { btnPlay }\r\n)(ButtonPlay);\r\n","export const typeOfHouse = value => {\r\n  return {\r\n    type: \"TYPE_OF_HOUSE\",\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const newGame = values => {\r\n  return {\r\n    type: \"NEW_GAME\",\r\n    payload: values\r\n  };\r\n};\r\n\r\nexport const reset = () => {\r\n  return {\r\n    type: \"RESET\"\r\n  };\r\n};\r\nexport const settings = () => {\r\n  return {\r\n    type: \"SETTINGS\"\r\n  };\r\n};\r\n\r\nexport const btnPlay = playerResults => {\r\n  return {\r\n    type: \"BTN_PLAY\",\r\n    payload: playerResults\r\n  };\r\n};\r\n\r\n/*ACTION\r\nNEW_GAME:\r\n -all scores = 0\r\n - circle amount = typedHouse\r\n - paws amount = 0\r\n - active player\r\nACTIVE PLAYER (wysyłane przy onclick )\r\nFOOD\r\nCATNIP\r\nRESET\r\n--TYPE_OF_HOUSE*/\r\n","import React from \"react\";\r\nimport ButtonPlay from \"./ButtonPlay\";\r\n\r\nclass ButtonPlayList extends React.Component {\r\n  playerScore(roundScore) {\r\n    const winnerScore = this.props.points.pathLength * 5;\r\n    const score = this.props.points.score + roundScore;\r\n    const paw = score >= 0 ? Math.floor(score / 5) : 0;\r\n    const playerStatus = score >= winnerScore ? \"Winner\" : 0;\r\n    const resume = playerStatus === \"Winner\" ? 1 : 0;\r\n    return { roundScore, score, paw, playerStatus, resume };\r\n  }\r\n\r\n  renderList() {\r\n    const FoodBtnScore = Math.floor(Math.random() * 4) + 1;\r\n    const CatnipBtnScore = Math.round(Math.random() * -6 + Math.random() * 8);\r\n    const button = [\r\n      { icon: \"pizza\", btnScore: FoodBtnScore },\r\n      { icon: \"beer\", btnScore: CatnipBtnScore }\r\n    ];\r\n    return button.map((cur, index) => (\r\n      <ButtonPlay\r\n        icon={cur.icon}\r\n        key={index}\r\n        onClickArg={this.playerScore(cur.btnScore)}\r\n        points={this.props.points}\r\n        btnType=\"btn-set\"\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nexport default ButtonPlayList;\r\n","import React from \"react\";\r\nimport \"./CommentArea.css\";\r\n\r\nconst CommentArea = ({ roundScore, status }) => {\r\n  let content = \"\";\r\n  const commentsBox = {\r\n    bad: `Cat Frederick  hates this kind of catnip. He is about to come back on the roof and never back again!  In the eyes of Frederick you're looser, so you loose ${roundScore} points.`,\r\n    medium: `This wasn't the worst thing which cat Frederick has ever eaten. Frederick gives you ${roundScore} points, so you should be grateful to him till the end of your life, human.`,\r\n    good: `Cat Frederick loves this catnip. It is totally crazy now. You get ${roundScore} points.`,\r\n    full: `It is hard to believe, but cat Frederick is full and needs to have a cat nap. It isn't interested in your poor bait, human.`,\r\n    prevStep:\r\n      \"That's enough! Cat Frederick is so dissapointed of you. It takes 1 step back to give you some time for thinking over your behaviour.\",\r\n    nextStep:\r\n      \" Cat Frederick  appreciates your effort and decides to get 1 step towards you. That's one small step for cat, but giant leap for mankind.\",\r\n    newGame:\r\n      \"Try to take Frederick from the roof. You can give him cat food or catnip.\",\r\n    winner:\r\n      \"You are a winner - the cat gets your kitchen. Frederick should congratulate you, but it's to proud to do it. As a reward you must open the fridge full of tuna and invite there Frederick\",\r\n    looser:\r\n      \"You are real looser - by Frederick eye, you spend the rest of your days with something like dog. Frederick should feels sorry becouse of your failure, but it don't not care a hang\"\r\n  };\r\n  if (!status) {\r\n    switch (true) {\r\n      case roundScore < -4: {\r\n        content = `${commentsBox.bad} ${commentsBox.prevStep}`;\r\n        break;\r\n      }\r\n      case roundScore >= -4 && roundScore < 0: {\r\n        content = commentsBox.bad;\r\n        break;\r\n      }\r\n      case roundScore === 0: {\r\n        content = commentsBox.full;\r\n        break;\r\n      }\r\n      case roundScore > 0 && roundScore < 5: {\r\n        content = commentsBox.medium;\r\n        break;\r\n      }\r\n      case roundScore >= 5: {\r\n        content = `${commentsBox.good} ${commentsBox.nextStep}`;\r\n        break;\r\n      }\r\n    }\r\n  } else {\r\n    content = commentsBox.winner;\r\n  }\r\n\r\n  return <div className=\"commentArea\">{content}</div>;\r\n};\r\n\r\nexport default CommentArea;\r\n","import React from \"react\";\r\n\r\nimport \"./CatPath.css\";\r\n\r\nclass CatPath extends React.Component {\r\n  /* renderList() {\r\n    const list = [];\r\n    for (let i = 1; i <= this.props.points.pathLength; i++) {\r\n      if (i <= this.props.points.pawAmount) {\r\n        list.push(<ion-icon name={\"paw\"} key={i} />);\r\n      } else {\r\n        list.push(<ion-icon name={\"radio-button-off\"} key={i} />);\r\n      }\r\n    }\r\n    return list;\r\n  }*/\r\n  renderList() {\r\n    const list = [];\r\n    for (let i = 1; i <= this.props.points.pathLength; i++) {\r\n      if (i <= this.props.points.pawAmount) {\r\n        list.push(<li className=\"active\" key={i} />);\r\n      } else {\r\n        list.push(<li key={i} />);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"catpath\">\r\n        <ul className=\"catpath-list\">{this.renderList()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CatPath;\r\n","import React from \"react\";\r\nimport \"./PlayerCard.css\";\r\nimport ButtonPlayList from \"./ButtonPlayList\";\r\nimport CommentArea from \"./CommentArea\";\r\nimport CatPath from \"./CatPath\";\r\n\r\nconst PlayerCard = ({ name, points, classNumber }) => {\r\n  const playerName =\r\n    points.playerStatus === \"Winner\" ? points.playerStatus : points.player;\r\n  return (\r\n    <div\r\n      className=\"player-card\"\r\n      style={{\r\n        backgroundColor:\r\n          points.active === 1\r\n            ? \" rgba(231, 114, 187, 0.151)\"\r\n            : \" rgba(255, 255, 255, 0.336)\"\r\n      }}\r\n    >\r\n      <div\r\n        className={`player-card__indicator player-card__indicator--${classNumber}`}\r\n        style={{\r\n          visibility: points.active === 1 ? \" visible\" : \"hidden\"\r\n        }}\r\n      />\r\n      <h3>{playerName}</h3>\r\n      <div className=\"player-card__score\">Total score: {points.score}</div>\r\n      <div className=\"player-card__content clearfix\">\r\n        <CatPath points={points} />\r\n        <CommentArea\r\n          roundScore={points.roundScore}\r\n          status={points.playerStatus}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"player-card__buttons\">\r\n        <ButtonPlayList points={points} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerCard;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PlayerCard from \"./PlayerCard\";\r\nimport \"./PlayerCard.css\";\r\n\r\nconst PlayerCardList = ({ game }) => {\r\n  const playerName = [game[0].player, game[1].player];\r\n  const playerList = playerName.map((cur, index) => (\r\n    <PlayerCard\r\n      key={cur}\r\n      name={cur}\r\n      points={game[index]}\r\n      classNumber={index + 1}\r\n    />\r\n  ));\r\n  return <div className=\"clearfix\">{playerList}</div>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { game: state.game };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PlayerCardList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { typeOfHouse } from \"../actions\";\r\nimport \"./Buttons.css\";\r\n\r\nconst ButtonToSelect = props => {\r\n  return (\r\n    <select\r\n      defaultValue=\"middle\"\r\n      className=\"btn-sel\"\r\n      onChange={event => props.typeOfHouse(event.target.value)}\r\n    >\r\n      <option value=\"small\">Small House</option>\r\n      <option value=\"middle\">Middle House</option>\r\n      <option value=\"big\">Big House</option>\r\n    </select>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n\r\n  return { typedHouse: state.typedHouse };\r\n};\r\nconst mapDispatchToProps = {\r\n  typeOfHouse\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ButtonToSelect);\r\n","import React from \"react\";\r\nimport \"./Buttons.css\";\r\n\r\nconst ButtonSet = props => {\r\n  return (\r\n    <button className={`btn ${props.btnType}`} onClick={props.onClick}>\r\n      {props.btnName}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonSet;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { settings, reset } from \"../actions\";\r\nimport ButtonSet from \"./ButtonSet\";\r\n\r\nconst ButtonSetList = props => {\r\n  const buttonName = [\r\n    { name: <ion-icon name=\"refresh\" />, action: props.reset },\r\n    { name: <ion-icon name=\"settings\" />, action: props.settings }\r\n  ];\r\n  const buttonList = buttonName.map((cur, index) => (\r\n    <ButtonSet\r\n      btnName={cur.name}\r\n      btnType=\"btn-circle\"\r\n      key={index}\r\n      onClick={cur.action}\r\n    />\r\n  ));\r\n\r\n  return <div>{buttonList}</div>;\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { reset, settings }\r\n)(ButtonSetList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ButtonSet from \"./ButtonSet\";\r\nimport { newGame } from \"../actions\";\r\n\r\nimport \"./InputPlayerName.css\";\r\n\r\nclass inputPlayerName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textInput1 = React.createRef();\r\n    this.textInput2 = React.createRef();\r\n  }\r\n\r\n  onClick = () => {\r\n    this.props.newGame({\r\n      player: [this.textInput1.current.value, this.textInput2.current.value],\r\n      house: this.props.typedHouse\r\n    });\r\n  };\r\n  renderInputList() {\r\n    const inputs = [this.textInput1, this.textInput2];\r\n    return inputs.map((cur, index) => {\r\n      return (\r\n        <input\r\n          ref={cur}\r\n          className=\"playerName__input\"\r\n          key={`input ${index}`}\r\n          type=\"text\"\r\n          maxLength=\"13\"\r\n          placeholder={`Keeper ${index + 1} name`}\r\n          spellCheck=\"false\"\r\n        />\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"playerName\" onSubmit={e => e.preventDefault()}>\r\n          {this.renderInputList()}\r\n        </form>\r\n        <ButtonSet\r\n          btnName=\"Start Game\"\r\n          btnType=\"btn-set\"\r\n          onClick={this.onClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { typedHouse: state.typedHouse, game: state.game };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { newGame }\r\n)(inputPlayerName);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PlayerCardList from \"./PlayerCardList\";\r\nimport ButtonSelect from \"./ButtonSelect\";\r\nimport ButtonSetList from \"./ButtonSetList\";\r\n\r\nimport InputPlayerName from \"./InputPlayerName\";\r\nimport \"./App.css\";\r\n\r\nconst App = props => {\r\n  const inactive_game = props.resume ? \"inactive\" : \"\";\r\n  const inactive_context = props.resume ? \"\" : \"inactive\";\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className={`main-container__popup ${inactive_context}`}>\r\n        <h1 className=\"main-container__heading \">CATKEEPER</h1>\r\n        <div className=\"main-container__panel\">\r\n          <div className=\"main-container__panel__settings\">\r\n            <h3 className=\"main-container__heading--small \">Game Settings</h3>\r\n            <ButtonSelect />\r\n            <InputPlayerName />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`main-container__players ${inactive_game}`}>\r\n        <PlayerCardList />\r\n      </div>\r\n      <div className={`main-container__buttons ${inactive_game}`}>\r\n        <ButtonSetList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    resume: state.resume\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst contextDisplay = (resume = 1, action) => {\r\n  if (action.type === \"NEW_GAME\") {\r\n    resume = 0;\r\n  } else if (action.type === \"SETTINGS\") {\r\n    resume = 1;\r\n  }\r\n  return resume;\r\n};\r\n\r\nconst typedHouseReducer = (typedHouse = 7, action) => {\r\n  if (action.type !== \"TYPE_OF_HOUSE\") {\r\n    return typedHouse;\r\n  }\r\n\r\n  switch (action.payload) {\r\n    case \"small\":\r\n      return (typedHouse = 5);\r\n    case \"middle\":\r\n      return (typedHouse = 7);\r\n    case \"big\":\r\n      return (typedHouse = 9);\r\n  }\r\n};\r\n\r\nconst gameReducer = (\r\n  initialState = [\r\n    {\r\n      player: \"Keeper 1\",\r\n      score: 0,\r\n      pathLength: 7,\r\n      pawAmount: 0,\r\n      active: 1,\r\n      playerStatus: 0\r\n    },\r\n    {\r\n      player: \"Keeper 2\",\r\n      score: 0,\r\n      pathLength: 7,\r\n      pawAmount: 0,\r\n      active: 0,\r\n      playerStatus: 0\r\n    }\r\n  ],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"NEW_GAME\":\r\n      return initialState.map((el, index) => {\r\n        el.player =\r\n          action.payload.player[index] === \"\"\r\n            ? `Keeper ${index + 1}`\r\n            : action.payload.player[index];\r\n        el.roundScore = \"a\";\r\n        el.score = 0;\r\n        el.pathLength = action.payload.house;\r\n        el.pawAmount = 0;\r\n        el.active = index === 0 ? 1 : 0;\r\n        el.playerStatus = 0;\r\n        return el;\r\n      });\r\n    case \"RESET\":\r\n      return initialState.map((el, index) => {\r\n        el.roundScore = \"a\";\r\n        el.score = 0;\r\n        el.pawAmount = 0;\r\n        el.active = index === 0 ? 1 : 0;\r\n        el.playerStatus = 0;\r\n        return el;\r\n      });\r\n    case \"BTN_PLAY\":\r\n      return initialState.map(cur => {\r\n        if (cur.active === 1) {\r\n          cur.roundScore = action.payload.roundScore;\r\n          cur.score = action.payload.score;\r\n          cur.circleAmount = action.payload.circle;\r\n          cur.pawAmount = action.payload.paw;\r\n          cur.active = 0;\r\n          cur.playerStatus = action.payload.playerStatus;\r\n          return cur;\r\n        } else {\r\n          cur.active = 1;\r\n          return cur;\r\n        }\r\n      });\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  typedHouse: typedHouseReducer,\r\n  game: gameReducer,\r\n  resume: contextDisplay\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}